name: publish

on:
  workflow_dispatch

jobs:

  build1:
    strategy:
      fail-fast: false
      matrix:
        pkg: [adig, ag, alass, aom, apkeep, aria2, arping, awk, axel, b3sum, base16, base64, bash, basis_universal, bat, bc, bcrypt, berkeley-db, bgrep, binaryen, bind, bison, bk, boxes, broot, brotli, bsdtar, busybox, byacc, bzip2, calc, cargo-c, ccache, cflow, choose, clog, cmake, cmark, cmatrix, coreutils, cotp, cpio, cppcheck, crosstool-ng, crowbook, curl, darkhttpd, dash, dav1d, delta, difftastic, diffutils, dns2tcp, dnsmap, dog, dos2unix, dot_static, doxygen, dua, dufs, duktape, dust, easyutils, ed, epsilon, erdtree, exa, exhale, exiv2, eza, fcp, fd, fff, ffmpeg, figlet, file, findent, findutils, flac, flatc, flex, flock, fontconfig, fortune, fselect, fsmon, fswatch, fzy, gawk, getopt, gettext-tools, gettext, gif, gindent, git-cliff, git, gitui, gitwatch, glib-tools, gm4, gmake, gn, gnu-barcode, gnu-which, gnupg, gperf, gperftools, gping, gpsim, gputils, graphicsmagick, grep, grex, gsed, gtar, gtime, gzip, halibut, helix, hexdump, hexyl, htop, hunspell, hurl, hyperfine, ideviceinstaller, ipinfo, iw, jbig2dec, jj, jpegoptim, jq, lame, lcms2, lcov, ldns, less, lighttpd, lmdb, lolcat, lrzip, lsd, lsof, luau, lunzip, lychee, lynx, lz4, lzip, lzop, mawk, mcfly, md4c, mdbook, mediainfo, minisign, mold, mpg123, mruby@3.0.0, mruby@3.2.0, mujs, nano, nasm, navi, ncdu, ndk-pkg-core, neofetch, netcat, nethogs, netpbm, nginx, ninja, nnn, nsh, nushell, oggz, onefetch, opencolorio, openexr, openjpeg, openssl, openssl@1.1, p7zip, packcc, patch, patchelf, pbzip2, pcre2, pegof, pigz, pkg-config, pkgconf, plzip, png, pngcheck, pngquant, pngsplit, ppkg, procs, progress, proj, proot2, putty, pv, qpdf, qrencode, quickjs, ragel, rav1e, re2c, resvg, rhash, ripgrep-all, ripgrep, rlwrap, rover, rsass, rsync, rtmpdump, rtorrent, ruff, rust-analyzer, rustscan, samurai, sassc, scdoc, sd, shaderc, shc, shellharden, sl, sndfile, speex, sqlite3, starship, stwolame, stylua, suricata, svn-lite, svt-av1, swig, sysinfo, tarlz, tcpdump, tealdeer, tectonic, tiff, tig, tinyalsa, tinysearch, tlrc, tmux, tokei, tree, trietool, ttyd]

    runs-on: ubuntu-latest

    container: ubuntu:24.04

    steps:
      - run: apt -y update
      - run: apt -y install curl

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ndk-pkg/master/ndk-pkg
      - run: chmod a+x ndk-pkg

      - run: ./ndk-pkg about
      - run: ./ndk-pkg setup
      - run: ./ndk-pkg update
      - run: ./ndk-pkg install android-35-arm64-v8a/${{ matrix.pkg }} --static
      - run: ./ndk-pkg bundle  android-35-arm64-v8a/${{ matrix.pkg }} .tar.xz --exclude include/ --exclude lib/

      - name: generate ${{ matrix.pkg }}.yml
        run: |
          set -ex

          PACKAGE_SUMMARY="$(./ndk-pkg info-installed android-35-arm64-v8a/${{ matrix.pkg }} summary)"
          PACKAGE_WEB_URL="$(./ndk-pkg info-installed android-35-arm64-v8a/${{ matrix.pkg }} web-url)"
          PACKAGE_VERSION="$(./ndk-pkg info-installed android-35-arm64-v8a/${{ matrix.pkg }} version)"

          PACKAGE_FILENAME="$(ls *-android-aarch64.release.tar.xz)"
          PACKAGE_BIN_SHA="$(sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

          PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

          cat > ${{ matrix.pkg }}.yml <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  build2:
    strategy:
      fail-fast: false
      matrix:
        pkg: [ttygif, ttyrec, typos, uctags, unbound, unrar, uppm, uppm@0.15.2, uppm@0.15.3, uppm@0.15.4, usbmuxd, util-linux, vim, wabt, wasm3, wasmtime, watchexec, wavpack, webp, websocat, wget, whois, x264, x265, xh, xmlstarlet, xmlutils, xmlwf, xorriso, xsltproc, xxd, xz, yasm, zip, zola, zopfli, zoxide, zsh, zstd, zsync]

    runs-on: ubuntu-latest

    container: ubuntu:24.04

    steps:
      - run: apt -y update
      - run: apt -y install curl

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ndk-pkg/master/ndk-pkg
      - run: chmod a+x ndk-pkg

      - run: ./ndk-pkg about
      - run: ./ndk-pkg setup
      - run: ./ndk-pkg update
      - run: ./ndk-pkg install android-35-arm64-v8a/${{ matrix.pkg }} --static
      - run: ./ndk-pkg bundle  android-35-arm64-v8a/${{ matrix.pkg }} .tar.xz --exclude include/ --exclude lib/

      - name: generate ${{ matrix.pkg }}.yml
        run: |
          set -ex

          PACKAGE_SUMMARY="$(./ndk-pkg info-installed android-35-arm64-v8a/${{ matrix.pkg }} summary)"
          PACKAGE_WEB_URL="$(./ndk-pkg info-installed android-35-arm64-v8a/${{ matrix.pkg }} web-url)"
          PACKAGE_VERSION="$(./ndk-pkg info-installed android-35-arm64-v8a/${{ matrix.pkg }} version)"

          PACKAGE_FILENAME="$(ls *-android-aarch64.release.tar.xz)"
          PACKAGE_BIN_SHA="$(sha256sum "$PACKAGE_FILENAME" | cut -d ' ' -f1)"

          PACKAGE_BIN_URL="https://github.com/${{ github.repository }}/releases/download/@TAGNAME@/$PACKAGE_FILENAME"

          cat > ${{ matrix.pkg }}.yml <<EOF
          summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA
          EOF

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}
          path: |
            ./*.tar.xz
            ./*.yml

  publish:
    needs: [build1, build2]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls

      - run: |
          set -ex

          TAGNAME="$(date +%Y.%m.%d)"

          sed -i "s|@TAGNAME@|$TAGNAME|" *.yml

          mv *.yml formula/

          DIRNAME="uppm-formula-repository-android-aarch64-$TAGNAME"

          install -d "$DIRNAME"

          cp -r formula "$DIRNAME/"

          tar cvJf "$DIRNAME.tar.xz" "$DIRNAME"

          sha256sum *.tar.xz > sha256sums.txt

          cat > notes.md <<EOF
          these packages are created by [ndk-pkg](https://github.com/leleliu008/ndk-pkg).

          these packages are fully statically linked.

          these packages are relocatable which means that you can install them to anywhere.

          ## Environment Variables

          **following environment variables should be set for \`git\` package**

          \`\`\`bash
          export GIT_EXEC_PATH="\$GIT_INSTALL_DIR/libexec/git-core"
          export GIT_TEMPLATE_DIR="\$GIT_INSTALL_DIR/share/git-core/templates"
          \`\`\`

          **following environment variables should be set for \`file\` package**

          \`\`\`bash
          export MAGIC="\$FILE_INSTALL_DIR/share/misc/magic.mgc"
          \`\`\`

          ## sha256sum

          \`\`\`
          $(cat sha256sums.txt)
          \`\`\`
          EOF

          gh release create "$TAGNAME" sha256sums.txt --title "$TAGNAME" --notes-file notes.md

          for f in *.tar.xz
          do
            sleep 1s
            gh release upload "$TAGNAME" "$f"
          done

          git config --global user.name  "leleliu008"
          git config --global user.email "leleliu008@gmail.com"

          git pull

          git add formula
          git commit -m "release new version $TAGNAME"
          git push origin master
